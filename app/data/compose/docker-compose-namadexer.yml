version: "3.8"

services:
  server:
    restart: unless-stopped
    hostname: server
    image: cerc/namadexer:local
    # entrypoint: ["sh", "/docker-entrypoint-scripts.d/start-server.sh"]
    entrypoint: ["/bin/bash", "-c", " /usr/local/bin/server"]
    environment:
      - RUST_LOG="namadexer=debug"
      - INDEXER_CONFIG_PATH=/app/config/Settings.toml
    volumes:
      - ../config/namadexer/Settings.toml:/app/config/Settings.toml
      - ../config/namadexer/checksums.json:/app/checksums.json
    ports:
      - "3030:3030"
    depends_on:
      - db
      - indexer
  
  indexer:
    restart: unless-stopped
    hostname: indexer
    image: cerc/namadexer:local
    # entrypoint: ["sh", "/docker-entrypoint-scripts.d/start-node.sh"]
    entrypoint: ["/bin/bash", "-c", "/usr/local/bin/indexer"]
    volumes:
      - ../config/namadexer/Settings.toml:/app/config/Settings.toml
      - ../config/namadexer/checksums.json:/app/checksums.json
    environment:
      - RUST_LOG="namadexer=debug"
      - INDEXER_CONFIG_PATH=/app/config/Settings.toml
    # ports:
    depends_on:
      - db
    
  db:
    restart: unless-stopped
    hostname: db
    image: postgres:14
    environment:
      POSTGRES_USER: namadexer
      POSTGRES_PASSWORD: BatteryStaple
      POSTGRES_DB: chain
    ports:
      - "5025:5025"
  
  nginx:
    restart: unless-stopped
    hostname: nginx
    image: nginx:latest
    #environment
    ports:
      - "80:80"
    
  # namada:
  #   restart: unless-stopped
  #   hostname: namada
  #   image: cerc/namada:local
  #   entrypoint: ["sh", "/docker-entrypoint-scripts.d/start-node.sh"]
  #   volumes:
  #     - ../config/public-namada/start-node.sh:/docker-entrypoint-scripts.d/start-node.sh
  #     - namada_data:/root/.local/share/namada
  #   environment:
  #     - CHAIN_ID=$CHAIN_ID
  #     - EXTIP=$EXTIP
  #     - RPC_LISTEN=$RPC_LISTEN
  #     - RPC_CORS_ALLOWED=$RPC_CORS_ALLOWED
  #     - INDEXER=$INDEXER
  #     - PROM_ENABLE=$PROM_ENABLE
  #     - CONFIGS_SERVER=$CONFIGS_SERVER
  #     - P2P_PORT=$P2P_PORT
  #     - PERSISTENT_PEERS=$PERSISTENT_PEERS
  #   ports:
  #     - "${P2P_PORT:-26656}:26656" # p2p
  #     - "${RPC_PORT:-26657}:26657" # http rpc
  #     - "${PROM_PORT:-26660}:26660" # prometheus

# volumes:
#   # namada_data:
#   namada_data:
#     driver: local
#     driver_opts:
#       o: bind
#       type: none
#       device: "${NAMADA_DATA_DIR:-$HOME/.local/share/namada}"
